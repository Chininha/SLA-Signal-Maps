import streamlit as st
from figures import *
from figures import sla_indicator_chart, sla_last_30days, rssi_last_30days, transmissions, \
    metrics_boxplot, battery_voltage_last30days, recent_reading, sla_per_city, sla_bat_rssi_all_project
from queries import querie_builder

def sla_overview(results:querie_builder.Queries) -> None:
    metrics_data_30days = querie_builder.Queries.load_imporant_data(queries_responses=results, specific_response='SLA_OVER_TIME_ALL_UNITS')
    df_all_unit_services = querie_builder.Queries.load_imporant_data(queries_responses=results, specific_response='ALL_UNITS')
    df_recent_readings = querie_builder.Queries.load_imporant_data(queries_responses=results, specific_response='RECENT_READINGS')
    df_transmission_instc_comgas23 = querie_builder.Queries.load_imporant_data(queries_responses=results, specific_response='DAILY_TRANSMISSIONS_INSTC_COMGAS23')
    df_transmission_labc_comgas22 = querie_builder.Queries.load_imporant_data(queries_responses=results, specific_response='DAILY_TRANSMISSIONS_LABC_COMGAS22')
    df_sla_per_city = df_all_unit_services.groupby(by='Cidade - Nome').agg({'IEF':'mean', 'Matrícula':'count'}).apply(lambda x: round(x, 2)).sort_values(by='IEF', ascending=True)
    df_sla_all_BU = df_all_unit_services.groupby('Unidade de Negócio - Nome').agg({'IEF':'mean', 'Matrícula':'count'}).reset_index()
    all_metrics_grouped_by_dt = metrics_data_30days.groupby(by='snapshot_date').mean()
    st.header('SLA metrics')
    st.markdown('###')
    gauge_chart = sla_indicator_chart.gauge_sla_figure(df_sla_all_BU)
    sla_per_city_fig = sla_per_city.sla_per_city(df_sla_per_city)
    all_metrics_fig = sla_bat_rssi_all_project.metrics_all_projects(all_metrics_grouped_by_dt)
    sla_30days = sla_last_30days.sla_last_30days(metrics_data_30days)
    rssi_30days = rssi_last_30days.rssi_last_30days(metrics_data_30days)
    boxplot_metrics = metrics_boxplot.metrics_boxplot(metrics_data_30days)
    battery_voltage30days = battery_voltage_last30days.battery_voltage(metrics_data_30days)
    st.plotly_chart(gauge_chart, use_container_width=True)
    st.markdown('---')
    st.markdown('###')
    st.plotly_chart(sla_per_city_fig, use_container_width=True)
    st.markdown('---')
    st.header('Overall Analysis :chart_with_upwards_trend:')
    st.markdown('---')
    st.markdown('###')
    st.plotly_chart(all_metrics_fig, use_container_width=True)
    st.markdown('---')
    st.markdown('###')
    sla_c, rssi_c, bat_c = st.columns(3)
    sla_c.plotly_chart(sla_30days, use_container_width=True)
    rssi_c.plotly_chart(rssi_30days, use_container_width=True)
    bat_c.plotly_chart(battery_voltage30days, use_container_width=True)
    st.markdown('###')
    st.markdown('###')
    st.plotly_chart(boxplot_metrics, use_container_width=True)
    st.markdown('---')
    st.header('Daily Readings Analysis')
    st.markdown('---')
    st.markdown('###')
    recent_readings_fig = recent_reading.recent_reading(data=df_recent_readings)
    st.plotly_chart(recent_readings_fig, use_container_width=True)
    st.markdown('---')
    st.header('Daily Transmissions Analysis')
    st.markdown('---')
    st.markdown('###')
    daily_transmission_instc_comgas23_fig = transmissions.daily_transmissions(df_transmission_instc_comgas23)
    daily_transmission_ilabc_comgas22_fig = transmissions.daily_transmissions(df_transmission_labc_comgas22)
    st.plotly_chart(daily_transmission_instc_comgas23_fig, use_container_width=True)
    st.plotly_chart(daily_transmission_ilabc_comgas22_fig, use_container_width=True)
